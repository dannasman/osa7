{"version":3,"sources":["components/Blog.js","components/Notification.js","components/Togglable.js","components/NewBlog.js","utils/storage.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","handleLike","handleRemove","own","useState","visible","setVisible","label","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","author","onClick","url","likes","id","user","name","Notification","notification","borderStyle","borderRadius","padding","color","type","background","message","Togglable","React","forwardRef","props","ref","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","NewBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","createBlog","value","onChange","target","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","getConfig","headers","Authorization","storage","token","axios","get","then","response","data","post","put","delete","login","credentials","a","App","blogs","setBlogs","setUser","username","setUsername","password","setPassword","setNotification","blogFormRef","createRef","useEffect","blogService","notifyWith","setTimeout","handleLogin","loginService","newBlog","current","concat","console","log","blogToLike","find","b","likedBlog","map","blogToRemove","window","confirm","filter","sort","b1","b2","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b885944a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, handleLike, handleRemove, own }) => {\n    const [visible, setVisible] = useState(false)\n\n    const blogStyle = {\n        paddingTop: 10,\n        paddingLeft: 2,\n        border: 'solid',\n        borderWidth: 1,\n        marginBottom: 5\n    }\n\n    const label = visible ? 'hide' : 'view'\n\n    return (\n        <div style={blogStyle} className='blog'>\n            <div>\n                <i>{blog.title}</i> by {blog.author} <button onClick={() => setVisible(!visible)}>{label}</button>\n            </div>\n            {visible && (\n                <div>\n                    <div>{blog.url}</div>\n                    <div>likes {blog.likes}\n                        <button onClick={() => handleLike(blog.id)}>like</button>\n                    </div>\n                    <div>{blog.user.name}</div>\n                    {own && <button onClick={() => handleRemove(blog.id)}>remove</button>}\n                </div>\n            )}\n        </div>\n    )\n}\n\nBlog.propTypes = {\n    blog: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        author: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n    }).isRequired,\n    handleLike: PropTypes.func.isRequired,\n    handleRemove: PropTypes.func.isRequired,\n    own: PropTypes.bool.isRequired\n}\n\nexport default Blog","import React from 'react'\n\nconst Notification = ({ notification }) => {\n    if (!notification) {\n        return null\n    }\n\n    const style = {\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        color: notification.type === 'success' ? 'green' : 'red',\n        background: 'lightgrey'\n    }\n\n    return <div style={style}>\n        {notification.message}\n    </div>\n}\n\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggleVisibility\n        }\n    })\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible} className=\"togglableContent\">\n                {props.children}\n                <button onClick={toggleVisibility}>cancel</button>\n            </div>\n        </div>\n    )\n})\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import React, { useState } from 'react'\n\nconst NewBlog = (props) => {\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n\n    const handleNewBlog = (event) => {\n        event.preventDefault()\n\n        props.createBlog({\n            title, author, url\n        })\n\n        setTitle('')\n        setAuthor('')\n        setUrl('')\n    }\n\n    return (\n        <div>\n            <h2>create new</h2>\n            <form onSubmit={handleNewBlog}>\n                <div>\n                    author\n                    <input\n                        id='author'\n                        value={author}\n                        onChange={({ target }) => setAuthor(target.value)}\n                    />\n                </div>\n                <div>\n                    title\n                    <input\n                        id='title'\n                        value={title}\n                        onChange={({ target }) => setTitle(target.value)}\n                    />\n                </div>\n                <div>\n                    url\n                    <input\n                        id='url'\n                        value={url}\n                        onChange={({ target }) => setUrl(target.value)}\n                    />\n                </div>\n                <button id=\"create\">create</button>\n            </form>\n        </div>\n    )\n}\n\nexport default NewBlog","const storageKey = 'loggedBlogAppUser'\n\nconst saveUser = (user) =>\n    localStorage.setItem(storageKey, JSON.stringify(user))\n\nconst loadUser = () =>\n    JSON.parse(localStorage.getItem(storageKey))\n\nconst logoutUser = () =>\n    localStorage.removeItem(storageKey)\n\nexport default {\n    saveUser,\n    loadUser,\n    logoutUser\n}","import axios from 'axios'\nimport storage from '../utils/storage'\n\nconst baseUrl = '/api/blogs'\n\nconst getConfig = () => {\n    return {\n        headers: { Authorization: `bearer ${storage.loadUser().token}` }\n    }\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (blog) => {\n    const request = axios.post(baseUrl, blog, getConfig())\n    return request.then(response => response.data)\n}\n\nconst update = (blog) => {\n    const request = axios.put(`${baseUrl}/${blog.id}`, blog, getConfig())\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`, getConfig())\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport NewBlog from './components/NewBlog'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport storage from './utils/storage'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [user, setUser] = useState(null)\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [notification, setNotification] = useState(null)\n\n    const blogFormRef = React.createRef()\n\n    useEffect(() => {\n        blogService.getAll().then(blogs =>\n            setBlogs(blogs)\n        )\n    }, [])\n\n    useEffect(() => {\n        const user = storage.loadUser()\n        setUser(user)\n    }, [])\n\n    const notifyWith = (message, type = 'success') => {\n        setNotification({\n            message, type\n        })\n        setTimeout(() => {\n            setNotification(null)\n        }, 5000)\n    }\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        try {\n            const user = await loginService.login({\n                username, password\n            })\n\n            setUsername('')\n            setPassword('')\n            setUser(user)\n            notifyWith(`${user.name} welcome back!`)\n            storage.saveUser(user)\n        } catch (exception) {\n            notifyWith('wrong username/password', 'error')\n        }\n    }\n\n    const createBlog = async (blog) => {\n        try {\n            const newBlog = await blogService.create(blog)\n            blogFormRef.current.toggleVisibility()\n            setBlogs(blogs.concat(newBlog))\n            notifyWith(`a new blog '${newBlog.title}' by ${newBlog.author} added!`)\n        } catch (exception) {\n            console.log(exception)\n        }\n    }\n\n    const handleLike = async (id) => {\n        const blogToLike = blogs.find(b => b.id === id)\n        const likedBlog = { ...blogToLike, likes: blogToLike.likes + 1, user: blogToLike.user.id }\n        await blogService.update(likedBlog)\n        setBlogs(blogs.map(b => b.id === id ? { ...blogToLike, likes: blogToLike.likes + 1 } : b))\n    }\n\n    const handleRemove = async (id) => {\n        const blogToRemove = blogs.find(b => b.id === id)\n        const ok = window.confirm(`Remove blog ${blogToRemove.title} by ${blogToRemove.author}`)\n        if (ok) {\n            await blogService.remove(id)\n            setBlogs(blogs.filter(b => b.id !== id))\n        }\n    }\n\n    const handleLogout = () => {\n        setUser(null)\n        storage.logoutUser()\n    }\n\n    if (!user) {\n        return (\n            <div>\n                <h2>login to application</h2>\n\n                <Notification notification={notification} />\n\n                <form onSubmit={handleLogin}>\n                    <div>\n                        username\n                        <input\n                            id='username'\n                            value={username}\n                            onChange={({ target }) => setUsername(target.value)}\n                        />\n                    </div>\n                    <div>\n                        password\n                        <input\n                            id='password'\n                            value={password}\n                            onChange={({ target }) => setPassword(target.value)}\n                        />\n                    </div>\n                    <button id='login'>login</button>\n                </form>\n            </div>\n        )\n    }\n\n    const byLikes = (b1, b2) => b2.likes - b1.likes\n\n    return (\n        <div>\n            <h2>blogs</h2>\n\n            <Notification notification={notification} />\n\n            <p>\n                {user.name} logged in <button onClick={handleLogout}>logout</button>\n            </p>\n\n            <Togglable buttonLabel='create new blog' ref={blogFormRef}>\n                <NewBlog createBlog={createBlog} />\n            </Togglable>\n\n            {blogs.sort(byLikes).map(blog =>\n                <Blog\n                    key={blog.id}\n                    blog={blog}\n                    handleLike={handleLike}\n                    handleRemove={handleRemove}\n                    own={user.username === blog.user.username}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}